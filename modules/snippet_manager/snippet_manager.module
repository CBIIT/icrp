<?php

/**
 * @file
 * Primary module hooks for Snippet manager module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_library_info_build().
 */
function snippet_manager_library_info_build() {

  $libraries = \Drupal::service('snippet_manager.snippet_library_builder')->build();

  // Build CodeMirror library.
  $codemirror_version = '5.14.2';
  $codemirror_settings = Drupal::config('snippet_manager.settings')->get('codemirror');

  $libraries['codemirror'] = [
    'remote' => 'https://codemirror.net',
    'version' => $codemirror_version,
    'license' => [
      'name' => 'MIT',
      'url' => 'http://codemirror.net/LICENSE',
      'gpl-compatible' => TRUE,
    ],
  ];

  if ($codemirror_settings['cdn']) {
    $prefix = 'https://cdnjs.cloudflare.com/ajax/libs/codemirror/' . $codemirror_version . '/';
    $lib_prefix = '';
    $options = ['type' => 'external'];
  }
  else {
    $prefix = '/libraries/codemirror/';
    $lib_prefix = 'lib/';
    $options = [];
  }

  $js_files = [
    $lib_prefix . 'codemirror.js',
    'mode/javascript/javascript.js',
    'mode/xml/xml.js',
    'mode/twig/twig.js',
    'mode/css/css.js',
    'addon/fold/foldcode.js',
    'addon/fold/brace-fold.js',
    'addon/fold/xml-fold.js',
    'addon/fold/comment-fold.js',
    'addon/display/fullscreen.js',
    'addon/mode/overlay.js',
  ];

  foreach ($js_files as $file) {
    $libraries['codemirror']['js'][$prefix . $file] = $options;
  }

  $css_files = [
    $lib_prefix . 'codemirror.css',
    'addon/fold/foldgutter.css',
    'addon/display/fullscreen.css',
  ];

  foreach ($css_files as $file) {
    $libraries['codemirror']['css']['component'][$prefix . $file] = $options;
  }

  if ($codemirror_settings['theme'] != 'default') {
    $libraries['codemirror']['css']['theme'][$prefix . 'theme/' . $codemirror_settings['theme'] . '.css'] = $options;
  }

  return $libraries;
}

/**
 * Implements hook_snippet_context().
 */
function snippet_manager_snippet_context() {
  $theme = Drupal::theme()->getActiveTheme();
  $context['theme'] = $theme->getName();
  $context['theme_directory'] = $theme->getPath();
  $context['base_path'] = base_path();
  $context['front_page'] = Url::fromRoute('<front>');
  $context['is_front'] = Drupal::service('path.matcher')->isFrontPage();
  $user = Drupal::currentUser();
  $context['is_admin'] = $user->hasPermission('access administration pages');
  $context['logged_in'] = $user->isAuthenticated();
  return $context;
}
