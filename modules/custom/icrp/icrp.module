<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use \Drupal\icrp\Importer\OrganizationRestClient;
use Drupal\views\Plugin\views\PluginBase;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Html;
use Drupal\Core\Template;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\Core\GeneratedLink;

/*
 * source: https://www.youtube.com/watch?v=L5x3WqTZPGk
 * @25:58 minutes
 * Overview of rendering flow
 * 1. drupal_render()
 *   2. #pre_render
 *   3. _theme()
 *     4. Theme suggestion hooks
 *     5. Preprocess functions
 *     6. Template is rendered
 *   7. #post_render
 *
 */


/**
 * Prepares variables for forums templates.
 *
 * Default template: forums.html.twig.
 *
 * @param array $variables
 *   An array containing the following elements:
 *   - forums: An array of all forum objects to display for the given taxonomy
 *     term ID. If tid = 0 then all the top-level forums are displayed.
 *   - topics: An array of all the topics in the current forum.
 *   - parents: An array of taxonomy term objects that are ancestors of the
 *     current term ID.
 *   - term: Taxonomy term of the current forum.
 *   - sortby: One of the following integers indicating the sort criteria:
 *     - 1: Date - newest first.
 *     - 2: Date - oldest first.
 *     - 3: Posts with the most comments first.
 *     - 4: Posts with the least comments first.
 *   - forum_per_page: The maximum number of topics to display per page.
 */
/*
function icrp_views_data() {
  drupal_set_message("icrp_views_data");
}
*/
function makeRandomString($max=6) {
    $i = 0; //Reset the counter.
    $possible_keys = " 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    $keys_length = strlen($possible_keys);
    $str = ""; //Let's declare the string, to add later.
    while($i<$max) {
        $rand = mt_rand(1,$keys_length-1);
        $str.= $possible_keys[$rand];
        $i++;
    }
    return $str;
}
function icrp_views_data_alter(array &$data) { 
  //drupal_set_message("icrp_views_data_alter");
  //dpm($data);
}

function last_forum_visit() {
  $long_date_template = 'F j, Y g:i A';
  $last_visit_text = '';

  $uid = \Drupal::currentUser()->id();
  $user = \Drupal::service('entity_type.manager')->getStorage('user')->load($uid);

  $last_visit_date_raw = $user->get('field_last_forum_visit')->value;
  if($last_visit_date_raw !== NULL) {
    $last_visit_timestamp = new DrupalDateTime($last_visit_date_raw, 'UTC');
    // Update the timezone to the system default.
    //$last_visit_timestamp->setTimezone(timezone_open(drupal_get_user_timezone()));
    $last_visit_date = $last_visit_timestamp->format($long_date_template);

    //drupal_set_message("last_visit_timestamp");
    //dpm($last_visit_date);
    $last_visit_text = 'Last visited: '.$last_visit_date;
  }

  $current_datetime = new DrupalDateTime('now');
  $datetime_storage = $current_datetime->format(DATETIME_DATETIME_STORAGE_FORMAT);
  $user->set("field_last_forum_visit", $datetime_storage);
  $user->save();

  return $last_visit_text;
}

function icrp_preprocess_forums(&$variables) {
  //dpm($variables);

  if($variables['term']) {
    $variables['tid'] = $variables['term']->id();
    $variables['tname'] = $variables['term']->getName();
    $variables['tdescription'] = $variables['term']->getDescription();
    $variables['last_forum_visit'] = last_forum_visit();
    switch($variables['tid']) {
      case 7:
        $variables['tfontawesome_icon'] = 'fa-newspaper-o';
        break;
      case 8:
        $variables['tfontawesome_icon'] = 'fa-comments-o';
        break;
      case 9:
        $variables['tfontawesome_icon'] = 'fa-group';
        break;
      case 10:
        $variables['tfontawesome_icon'] = 'fa-file-code-o';
        break;
      case 11:
        $variables['tfontawesome_icon'] = 'fa-dashboard';
        break;
      case 12:
        $variables['tfontawesome_icon'] = 'fa-globe';
        break;
      case 13:
        $variables['tfontawesome_icon'] = 'fa-database';
        break;
    }

    //$variables['newname'] = $variables['term']->value('name');
    //dpm($variables);
  }
}
function icrp_preprocess_forum_icon(&$variables) {
  //drupal_set_message("icrp_preprocess_forum_icon");
  //dpm($variables);
}
function getNodeIdFromMarkup($html) {
  //remove all non numeric numbers from $html to get the nodeId.  Weird but true
  //Did not see node id anywere except inside #markup.
  return preg_replace("/[^0-9,.]/", "", $html);;
}
function getThreadNodeInfo($thread_node_id) {
  $text_summary_max_length = 254;
  $node = \Drupal::entityTypeManager()->getStorage('node')->load($thread_node_id);
  //$summary = $node['#values']['body']['x-dfault'][0]['summary'];
  //$summary =  $node->get('summary')->value; 
  $body =  $node->get('body')->value; 
  $summary_raw =  $node->get('body')->summary; 
  if($summary_raw == "") {
    $summary = text_summary(rtrim(strip_tags($body)), NULL, $text_summary_max_length);
  } else {
    $summary = text_summary($summary_raw, NULL,  $text_summary_max_length);

  }
  //return array($node->getTitle(), "<b>".$summary."</b></br>Body: ".$body."</br>Summary Raw: ".$summary_raw);
  return array($node->getTitle(), $summary);
}

function processForumData($cell, $cell_index, $row_index, &$variables) {
  //dpm($cell);
  switch($cell_index) {
    case 0:
      //Column 0: Process Thread icon, Thread Name(link), and Summary
      //drupal_set_message("-->Process Column 0");
      //drupal_set_message("--->Theme:".$cell['content'][0]['#theme']);
      //dpm($cell);

      $new_thread = $cell['content'][0]['#first_new'];
      $new_posts = $cell['content'][0]['#new_posts']; 
/*
<div class="forum__title">
  <div><a href="/node/599" hreflang="en">Thread 9</a></div><div>
    <span>By <span title="View user profile." href="/user/6" lang="" about="/user/6" typeof="Person" property="schema:name" datatype="">ICRP Manager</span> 22 hours 45 minutes ago</span>
  </div>
</div>
*/
      $thread_node_id = getNodeIdFromMarkup(substr($cell['content'][1]['#markup'], 0, 60));
      list($thread_title, $thread_summary) = getThreadNodeInfo($thread_node_id);
      /* Create output for this cell */
      $html = '<span>';
      $html .= '  <div class="forum-thread-title"><a href="/node/'.$thread_node_id.'" hreflang="en">'.$thread_title.'</a></div>';
      $html .= '<div class=".forum-thread-title">'.$thread_summary.'</div>';
      $html .= '</span>';

      $variables['rows'][$row_index]['cells'][$cell_index]['icrp_markup'] = $html;

      break;
    case 1:
      //Column 1: Process Thread icon, Thread Name(link), and Summary
      //drupal_set_message("-->Process Column 1");
      $html = '<div style="text-align:center;">';
      $html .= '<div><span class="forum__posts">';
      $html .= $cell['content'][0]['#prefix'];
      $html .= '</span></div>';
      $html .= $cell['content'][0]['#markup'];
      $html .= '</div>';
      $variables['rows'][$row_index]['cells'][$cell_index]['icrp_markup'] = $html;
      break;
    case 2:
      //Column 1: Process Thread icon, Thread Name(link), and Summary
      //drupal_set_message("-->Process Column 2");
      break;

  }
}

function changeHeaderTitle($header_title, $forum_id, $sort_order) {
  drupal_set_message($sort_order);

  //Change header name but maintain dynamic sorting functionality
  $generatedLink = '<a href="/forum/'.$forum_id.'?sort=asc&amp;order=Topic" title="sort by '.$header_title.'">'.$header_title.'</a>';
  if($sort_order == "descending") {
    $generatedLink = '
      <a href="/forum/'.$forum_id.'?sort=asc&amp;order=Topic" title="sort by '.$header_title.'">'.$header_title.'
        <span class="tablesort tablesort--asc"><span class="visually-hidden">Sort ascending</span></span>
      </a>
    ';
  }
  if($sort_order == "ascending") {
    $generatedLink = '
      <a href="/forum/'.$forum_id.'?sort=desc&amp;order=Topic" title="sort by '.$header_title.'">'.$header_title.'
        <span class="tablesort tablesort--desc"><span class="visually-hidden">Sort descending</span></span>
      </a>  
    ';
  }
  return $generatedLink;
}


function icrp_preprocess_table(&$variables) {

  dpm($variables);

  if(substr($variables['attributes']['id'], 0, 11) != 'forum-topic') {
    return;
  }

  $forum_id = substr($variables['attributes']['id'], 12);
  $sort_order = "";
  if(isset($variables['header'][0]['attributes']->storage()['aria-sort'])) {
    $sort_order = $variables['header'][0]['attributes']->storage()['aria-sort']->value();
  }

  $variables['header'][0]['content']->setGeneratedLink(changeHeaderTitle("Thread", $forum_id, $sort_order));
  //Customize Rows and Cells 
  //dpm($variables['rows']);
  //drupal_set_message("Row Count: ".count($variables['rows']));
  foreach($variables['rows'] as $row_index => $row) {
    //drupal_set_message("row number: ".$row_index);
    foreach($row['cells'] as $cell_index => $cell) {
      //drupal_set_message("->cell number: ".$cell_index);
      processForumData($cell, $cell_index, $row_index, $variables);

    }
  }
  //Get Node ID for this row
  
  //$link = new GeneratedLink();
  //$link->setGeneratedLink('<a href="/forum/'.$forum_id.'?sort=asc&amp;order=Topic" title="sort by Thread">Thread</a>');

  //$variables['header'][0]['content'] = $link;

  //$gl = new GeneratedLink()->setGeneratedLink('<a hef="http://www.example.com">test</a>');
  //dpm($link);
}

/*
  if ($variables['forums_defined'] = count($variables['forums']) || count($variables['parents'])) {
    if (!empty($variables['forums'])) {
      $variables['forums'] = array(
        '#theme' => 'forum_list',
        '#forums' => $variables['forums'],
        '#parents' => $variables['parents'],
        '#tid' => $variables['tid'],
      );
    }

    if ($variables['term'] && empty($variables['term']->forum_container->value) && !empty($variables['topics'])) {
      $forum_topic_list_header = $variables['header'];

      $table = array(
        '#theme' => 'table__forum_topic_list',
        '#responsive' => FALSE,
        '#attributes' => array('id' => 'forum-topic-' . $variables['tid']),
        '#header' => array(),
        '#rows' => array(),
      );

      if (!empty($forum_topic_list_header)) {
        $table['#header'] = $forum_topic_list_header;
      }
*/

/*
function icrp_user_login($account) {
    // We want to redirect user on login.
    $response = new RedirectResponse("mypath");
    $response->send();
    return;
}
*/

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function icrp_preprocess_block(&$variables) {
  /*drupal_set_message("icrp_preprocess_block");
  kint($variables['configuration']);

  if ($variables['configuration']['provider'] == 'forum') {
    $variables['attributes']['role'] = 'navigation';
  }
  */
}

function icrp_preprocess_menu_local_action(&$variables) {
  $link = $variables['element']['#link'];
  $link += array(
    'localized_options' => array(),
  );
  $link['localized_options']['attributes']['class'][] = 'button';
  $link['localized_options']['attributes']['class'][] = 'button-action';
  $link['localized_options']['set_active_class'] = TRUE;

  $variables['link'] = array(
    '#type' => 'link',
    '#title' => $link['title'],
    '#options' => $link['localized_options'],
    '#url' => $link['url'],
  );
}

function icrp_preprocess_forums__topics(&$variables) {
  //drupal_set_message("forums__topics");
  //drupal_set_message($variables['forums']['topics']['#theme']);
  //kint($variables['forums']);
  //var_dump($variables);
 }
function icrp_preprocess_forum_list(&$variables) {
  //$variables['icrp_debug'] = true;
  //drupal_set_message("Added icrp_debug to variables.  See if you can access in twig.");
  $variables['last_post'][9] = 'Yes, I got it.  So cool';
  //drupal_set_message($variables['last_post'][9]);
  $variables['hello'] = 'World';
  //drupal_set_message("Added chris to variables.  See if you can access in twig.");
  //kint($variables);
  //drupal_set_message(print_r($variables, true));

}

function icrp_template_preprocess_default_variables_alter(&$variables) {
  $variables['icrp_debug'] = false;
  //$variables['icrp_debug'] = true;
  $variables['is_admin'] = 'Dont know';
  //drupal_set_message("We got something now");
  //var_dump($variables);
}

function icrp_user_format_name_alter(&$name, $account) {
  // Display the user's uid instead of name.
  //drupal_set_message("user_format_name");
  //dpm($name);
  //dpm($account->id());
  //$name = "Hello User";
  $user = \Drupal::service('entity_type.manager')->getStorage('user')->load($account->id());
  $name = $user->get('field_first_name')->value." ".$user->get('field_last_name')->value;


  //kint($account->get('field_first_name')->value);
  /*
  if ($account->id()) {
    $name = t('User @uid', array('@uid' => $account->id()));
  }
  */
}
function icrp_mail($key, &$message, $params) {

  // E-mail formatting will be exactly as below, so do not use indenting!
 $options = array(
    'langcode' => $message['langcode'],
  );
  switch ($key) {
    case 'approvedPartnershipApplicationMail':

        $body =
"Dear Partner,

We’re delighted to inform you that your application for membership of the ICRP has been approved. The Operations Manager will be in contact with you shortly and will send your new member’s pack.

With kind regards,

The ICRP team";
          //drupal_set_message($body);
          $message['from'] = \Drupal::config('system.site')->get('mail');
          $message['subject'] = "ICRP Partnership Application - Completed";
          $message['body'][] = Drupal\Core\Mail\MailFormatHelper::htmlToText($body);
          break;
    }
}
/*
function partnerApplicationSubmissionsTable() {
    //First Check to see if there are any Submitted Applications
    //If count is zero, then display all Active Submissions
    $markup = '<h1>Partner Application Administration Tool</h1>';
    $markup .= '<table id="partner-application-table" class="table table-striped table-bordered table-condensed cols-6 sticky-enabled">
  <thead>
  <tr>
    <th>Organization</th>
    <th>City</th>
    <th>Country</th>
    <th>Email</th>
    <th>Date Submitted</th>
    <th>Review Data</th>
    <th>Status</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Universal Cancer Research</td>
    <td>London</td>
    <td>United Kingdom</td>
    <td>nobel.price@universalcancerresearch.org</td>
    <td>10/14/2016</td>
    <td><a href="#">Review</a></td>
    <td>Pending Review</td>
  </tr>
  <tr>
    <td>American Cancer Society</td>
    <td>Atlanta</td>
    <td>Georgia</td>
    <td>tech@cancer.org</td>
    <td>5/24/2015</td>
    <td><a href="#">Review</a></td>
    <td>Pending Review</td>
  </tr>
  <tr>
    <td>Susan G. Komen Breast Cancer Foundation</td>
    <td>Dallas</td>
    <td>Texas</td>
    <td>sue@komen.org</td>
    <td>10/14/2016</td>
    <td><a href="#">Review</a></td>
    <td>Pending Review</td>
  </tr>
  </tbody>
</table> ';
    return $markup;
}

function partnerApplicationSubmissionsData() {
    //Query table and return JSON of "PENDING Review" Applications
    return 'jsonData';
}

function partnerApplicationSubmissionsCount() {
    //Perform SQL to add

    return 2;
}
*/

/**
 * Implements hook_theme().
 */
function icrp_theme() {
    return [
        'my_profile_form' => [
            'render element' => 'form',
        ],
    ];
}

/**
 * Implements hook_form_alter().
 */
/*
function icrp_hook_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
    $form['link'] = array('#markup' => l(t('Link text'),'node'));
    switch ($form_id) {
        case 'user-pass-reset':
            $form['terms_of_use'] = array(
                '#type' => 'checkbox',
                '#title' => t("I agree with the website's terms and conditions."),
                '#required' => TRUE,
            );
            break;
        case 'user_login_block':
            $form['link'] = array('#markup' => l(t('Link text'),'node'));
            break;
        case 'webform_submission_contact_form':
            // Set Type of Issue default value
            $form['elements']['contact_us']['contact_us_container_1']['type_of_issue']['#default_value'] = "Register for CSO Updates";

            // Pre-load user information if available
            $uid = \Drupal::currentUser()->id();
            if($uid > 0 ) {
                $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
                //kint($user);

                $name = $user->get('field_first_name')->value . ' ' . $user->get('field_last_name')->value;
                //drupal_set_message("Name: ". $name);
                $form['elements']['contact_us']['contact_us_container_2']['contact_us_left']['name']['#value'] = $name;

                $email = $user->get('mail')->value;
                $form['elements']['contact_us']['contact_us_container_2']['contact_us_right']['email']['#value'] = $email ;
            }
            break;
    }
    if ($form_id == 'user_form_what') {
        $form['#submit'][] = '_MODULE_goto';
        $form['terms_of_use'] = array(
            '#type' => 'checkbox',
            '#title' => t("I agree with the website's terms and conditions."),
            '#required' => TRUE,
        );
    }
}
*/

function icrp_views_pre_render($view) {
  // Scramble the order of the rows shown on this result page.
  // Note that this could be done earlier, but not later in the view execution
  // process.
  //drupal_set_message("views_pre_render");
  //drupal_set_message("shuffle rows");
  //shuffle($view->result);
  //kint($view);
  /*
  foreach($view->result as $key ){

    $value = $key->_entity->getValue('field_name')->getValue(array(0=>'value'));
    drupal_set_message("$value");
  }
  */
}

function icrp_views_query_alter($view, $query) {

    if($view->id() == 'partner_application_administration_tool_old'){
        $definition = array(
            'table' => 'webform_submission_data',
            'field' => 'sid',
            'left_table' => 'webform_submission',
            'left_field' => 'sid',
        );
        $join = Views::pluginManager('join')->createInstance('standard', $definition);

        $query->addRelationship('webform_submission_data', $join, 'webform_submission');

        // ouptuts "LEFT JOIN {node__field_precise_date} node__field_precise_date ON node_field_data.nid = node__field_precise_date.entity_id AND (node__field_precise_date.deleted = '0' AND node__field_precise_date.langcode = node_field_data.langcode)"

       // $date_format = $query->getDateFormat("node__field_precise_date.field_precise_date_value", "m")." = :value";
        //$query->addWhereExpression(2, $date_format, [":value" => 12]); // Where 12 is the month I need.
    }    
    //\Drupal::logger('hook')->notice('icrp_views_query_alter()');
    //drupal_set_message("views_query_alter");
    //drupal_set_message("View ID: ".$view->id());
    global $user;
    if($view->id() == "partner_application_administration_tool_old") {
        drupal_set_message("You are viewing the Partner Applications");
    }
    //kint($query);
  // (Example assuming a view with an exposed filter on node title.)
  // If the input for the title filter is a positive integer, filter against
  // node ID instead of node title.
  if ($view->id() == 'my_view' && is_numeric($view->exposed_raw_input['title']) && $view->exposed_raw_input['title'] > 0) {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        // If this is the part of the query filtering on title, chang the
        // condition to filter on node ID.
        if ($condition['field'] == 'node.title') {
          $condition = array(
            'field' => 'node.nid',
            'value' => $view->exposed_raw_input['title'],
            'operator' => '=',
          );
        }
      }
    }
  }
}

function icrp_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

    //drupal_set_message("Form ID: " . $form_id);
    //kint(print_r($form, true));
    switch ($form_id) {
        case 'block_content_basic_edit_form':
            if (strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home") !== false ||
                strpos($form['info']['widget']['0']['value']['#default_value'],"ICRP Site Updated Date") !== false) {
                if (strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home Partner Management") !== false) {
                    $blockTitle = "Edit Project Management";
                } else if(strpos($form['info']['widget']['0']['value']['#default_value'],"ICRP Site Updated Date") !== false) {
                    $blockTitle = "Edit Site Updated Date";
                } else if(strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home") !== false) {
                    $blockTitle = "Edit " . substr($form['#title'],55);
                } else {
                    $blockTitle = "Edit block [" . $form['info']['widget']['0']['value']['#default_value'] . "]";
                }
                unset($form['revision_information']);                     // Remove Revisions section from block edit page
                unset($form['actions']['delete']);                        // Remove Delete button from block edot page
                unset($form['info']);                                     // Remove ablity to edit block title

                $form['body']['widget']['0']['#title'] = $blockTitle;     // Set Block Edit heading
/*
                $form['actions']['cancel'] = array(                       // Add Cancel button
                    '#type'   => 'button',
                    '#value'  => t('Cancel'),
                    '#attributes' => array('onClick' => 'history.go(-1); return true;'),
                    '#weight' => 100,
                );
*/
            }

            break;
        case 'user_register_form':
            //drupal_set_message("user_register_form");
            //\Drupal\icrp\Importer\OrganizationRestClient::populateOrganizations();
            OrganizationRestClient::populateOrganizations();
            break;
        case 'node_forum_form':
            //$form['sticky']['#access'] = true;
            //dpm($form);
            break;
        case 'user_login':
        case 'user_login_form':
            //$form['link'] = array('#markup' => t("<div style=padding:20px;'><a href='/user/password'>Forgot Password?</a></div>"));
            break;
    }
}
