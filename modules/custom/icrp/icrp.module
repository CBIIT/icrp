<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use \Drupal\icrp\Importer\OrganizationRestClient;

/*
 * source: https://www.youtube.com/watch?v=L5x3WqTZPGk
 * @25:58 minutes
 * Overview of rendering flow
 * 1. drupal_render()
 *   2. #pre_render
 *   3. _theme()
 *     4. Theme suggestion hooks
 *     5. Preprocess functions
 *     6. Template is rendered
 *   7. #post_render
 *
 */
/*
function icrp_user_login($account) {
    // We want to redirect user on login.
    $response = new RedirectResponse("mypath");
    $response->send();
    return;
}
*/

/*
function icrp_user_login($account) {

    drupal_Set_message("I control you.");

    $url = "/home";
    $response = new Symfony\Component\HttpFoundation\RedirectResponse($url);
    $response->send();
    return;
}
*/

/**
 * Implements hook_theme().
 */
function icrp_theme() {
    return [
        'my_profile_form' => [
            'render element' => 'form',
        ],
    ];
}

/**
 * Implements hook_form_alter().
 */
/*
function icrp_hook_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
    $form['link'] = array('#markup' => l(t('Link text'),'node'));
    switch ($form_id) {
        case 'user-pass-reset':
            $form['terms_of_use'] = array(
                '#type' => 'checkbox',
                '#title' => t("I agree with the website's terms and conditions."),
                '#required' => TRUE,
            );
            break;
        case 'user_login_block':
            $form['link'] = array('#markup' => l(t('Link text'),'node'));
            break;
        case 'webform_submission_contact_form':
            // Set Type of Issue default value
            $form['elements']['contact_us']['contact_us_container_1']['type_of_issue']['#default_value'] = "Register for CSO Updates";

            // Pre-load user information if available
            $uid = \Drupal::currentUser()->id();
            if($uid > 0 ) {
                $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
                //kint($user);

                $name = $user->get('field_first_name')->value . ' ' . $user->get('field_last_name')->value;
                //drupal_set_message("Name: ". $name);
                $form['elements']['contact_us']['contact_us_container_2']['contact_us_left']['name']['#value'] = $name;

                $email = $user->get('mail')->value;
                $form['elements']['contact_us']['contact_us_container_2']['contact_us_right']['email']['#value'] = $email ;
            }
            break;
    }
    if ($form_id == 'user_form_what') {
        $form['#submit'][] = '_MODULE_goto';
        $form['terms_of_use'] = array(
            '#type' => 'checkbox',
            '#title' => t("I agree with the website's terms and conditions."),
            '#required' => TRUE,
        );
    }
}
*/

function icrp_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{

    //drupal_set_message("Form ID: " . $form_id);
    //kint(print_r($form, true));
    switch ($form_id) {
        case 'block_content_basic_edit_form':
            if (strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home") !== false ||
                strpos($form['info']['widget']['0']['value']['#default_value'],"ICRP Site Updated Date") !== false) {
                if (strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home Partner Management") !== false) {
                    $blockTitle = "Edit Project Management";
                } else if(strpos($form['info']['widget']['0']['value']['#default_value'],"ICRP Site Updated Date") !== false) {
                    $blockTitle = "Edit Site Updated Date";
                } else if(strpos($form['info']['widget']['0']['value']['#default_value'],"Partner Home") !== false) {
                    $blockTitle = "Edit " . substr($form['#title'],55);
                } else {
                    $blockTitle = "Edit block [" . $form['info']['widget']['0']['value']['#default_value'] . "]";
                }
                unset($form['revision_information']);                     // Remove Revisions section from block edit page
                unset($form['actions']['delete']);                        // Remove Delete button from block edot page
                unset($form['info']);                                     // Remove ablity to edit block title

                $form['body']['widget']['0']['#title'] = $blockTitle;     // Set Block Edit heading
/*
                $form['actions']['cancel'] = array(                       // Add Cancel button
                    '#type'   => 'button',
                    '#value'  => t('Cancel'),
                    '#attributes' => array('onClick' => 'history.go(-1); return true;'),
                    '#weight' => 100,
                );
*/
            }

            break;
        case 'user_register_form':
            //drupal_set_message("user_register_form");
            //\Drupal\icrp\Importer\OrganizationRestClient::populateOrganizations();
            OrganizationRestClient::populateOrganizations();
            break;
        case 'user_login':
        case 'user_login_form':
            //$form['link'] = array('#markup' => t("<div style=padding:20px;'><a href='/user/password'>Forgot Password?</a></div>"));
            break;
    }
}
