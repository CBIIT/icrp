<?php
/**
 * @file
 * Contains \Drupal\db_email_results\Controller\EmailResultsController.
 */

namespace Drupal\db_email_results\Controller;

use Drupal;
use PDOException;

class EmailResults {

  /**
   * createMessage
   *
   * @param array $properties Any properties used in this message
   *  $properties = [
   *    'sender_name'         => (string) The sender's name
   *    'sender_address'      => (string) The sender's email address
   *    'search_results_url'  => (string) The url to the search results
   *    'personal_message'    => (string) A personal message from the sender
   *  ]
   *
   * @return string The generated message
   */
  private static function createMessage(array $properties): string {
    return "
      $properties[sender_name] wants to share their ICRP search results. <br /><br />
      Please review their search results on the ICRP website: <br />
      <a href='$properties[search_results_url]'>$properties[search_results_url]</a><br />
      Message from <a href='mailto:$properties[sender_address]'>$properties[sender_address]: </a><br />
      $properties[personal_message] <br /><br />
      The search results will be available for 30 days.
    ";
  }

  /**
   * sendEmail
   *
   * @param array $properties An array containing the required properties for this email
   *  $properties = [
   *    'sender_address'        => (string) The email address from which this message will be sent
   *    'sender_name'           => (string) The name provided by the sender
   *    'recipient_addresses'   => (string) A comma-separated list of recipient email addresses
   *    'search_results_url'    => (string) The url for the search results
   *    'personal_message'      => (string) A personal message provided by the sender
   *    'attachments'           => (array)  An array of filepaths to use as attachments
   *  ]
   *
   * @return array An array containing the status of this operation
   *   return [
   *    'success' => (boolean) Whether the operation completed normally or not
   *    'error'   => (string)  Any error messages generated by this request. Optional.
   *   ]
   */
  public static function sendEmail(array $properties): array {
    $mail_manager = Drupal::service('plugin.manager.mail');
    $sender = Drupal::config('system.site')->get('mail');
    $langcode = Drupal::languageManager()->getCurrentLanguage()->getId();
    $recipient_addresses = explode(',', $properties['recipient_addresses']);
    $subject = $properties['sender_name'] . ' wants to share their ICRP search results';
    $body = self::createMessage([
      'sender_address'      => $properties['sender_address'],
      'sender_name'         => $properties['sender_name'],
      'personal_message'    => $properties['personal_message'],
      'search_results_url'  => $properties['search_results_url'],
    ]);

    foreach($recipient_addresses as $recipient_address) {
      $result = $mail_manager->mail(
        'db_email_results',
        'email_search_results',
        $recipient_address,
        $langcode,
        [
          'subject' => $subject,
          'body' => $body,
        ],
        $sender,
        true
      );

      if (!$result['result'] != true) {
        return [
          'success' => false,
          'error'   => "Could not send message to $recipient_address",
        ];
      }
    }

    try {
      PDOBuilder::createPreparedStatement(
        PDOBuilder::getConnection(),
        'EXECUTE UpdateSearchResultMarkEmailSent @SearchID=:search_id',
        ['search_id' => $properties['search_id']]
      )->execute();
    }

    catch (PDOException $e) {
      return [
        'success' => false,
        'error'   => $e->getMessage(),
      ];
    }

    return ['success' => true];
  }

}
